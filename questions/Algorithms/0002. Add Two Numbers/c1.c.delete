#include <stdio.h>
#include <stdlib.h>
#include <string.h>

struct ListNode {
  int val;
  struct ListNode *next;
};

struct ListNode *addTwoNumbers(struct ListNode *l1, struct ListNode *l2) {
  int carry = 0;
  struct ListNode dummy;
  struct ListNode *p = l1, *prev = &dummy;

  dummy.next = p;
  while (l1 != NULL || l2 != NULL) {
    int sum        = 0;
    int last_carry = carry;

    if (l1 != NULL) {
      if (p == NULL) {
        /* p never be NULL */
        prev->next = l1;
        p          = l1;
      }
      sum += l1->val;
      l1 = l1->next;
    }

    if (l2 != NULL) {
      if (p == NULL) {
        /* p never be NULL */
        prev->next = l2;
        p          = l2;
      }
      sum += l2->val;
      l2 = l2->next;
    }

    sum += last_carry;
    carry  = sum / 10;
    p->val = sum % 10;
    prev   = p;
    p      = p->next;
  }

  if (carry) {
    p          = malloc(sizeof(*p));
    p->val     = carry;
    p->next    = NULL;
    prev->next = p;
  }

  return dummy.next;
}

static struct ListNode *node_build(const char *digits) {
  struct ListNode *res, *p, *prev;
  int first     = 1;
  int len       = strlen(digits);
  const char *c = digits + len - 1;
  prev          = NULL;
  while (len-- > 0) {
    p = malloc(sizeof(*p));
    if (first) {
      first = 0;
      res   = p;
    }
    p->val  = *c-- - '0';
    p->next = NULL;
    if (prev != NULL) {
      prev->next = p;
    }
    prev = p;
  }

  return res;
}

static void show(struct ListNode *ln) {
  int sum = 0, factor = 1;
  while (ln != NULL) {
    sum += ln->val * factor;
    factor *= 10;
    ln = ln->next;
  }
  printf("%d\n", sum);
}

int main(int argc, char **argv) {
  char *a = "823";
  char *b = "234";

  struct ListNode *l1  = node_build(a);
  struct ListNode *l2  = node_build(b);
  struct ListNode *res = addTwoNumbers(l1, l2);
  show(l1);
  show(l2);
  show(res);
  return EXIT_SUCCESS;
}
