{"version":3,"sources":["i18n.ts","Header/index.tsx","Solutions/index.tsx","Questions/index.tsx","App.tsx","index.tsx"],"names":["resources","languages","i18n","use","initReactI18next","init","lng","Object","keys","keySeparator","interpolation","escapeValue","Header","useState","language","setLanguage","menuKey","setMenuKey","useTranslation","location","useLocation","useEffect","pathname","list","split","length","className","to","theme","onClick","info","key","toString","mode","selectedKeys","defaultSelectedKeys","Item","overlay","changeLanguage","lang","name","text","map","DownOutlined","LanguagesDefinition","Solutions","localServer","id","useParams","solutions","setSolutions","tabList","setTabList","active","setActive","axios","get","then","response","status","console","error","data","solution","push","tab","Content","style","width","defaultActiveTabKey","activeTabKey","onTabChange","toLowerCase","atob","trim","filename","Questions","currentPage","setCurrentPage","totalQuestions","setTotalQuestions","questions","setQuestions","t","category","undefined","res","allNum","str","item","findNum","param","header","Text","strong","dataSource","renderItem","question_frontend_id","translated_title","title","paid_only","LockOutlined","color","UnlockOutlined","difficulty","acRate","current","total","showSizeChanger","pageSize","onChange","page","App","path","element","Footer","textAlign","rel","target","href","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3c6ed626.chunk.js","sourcesContent":["import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\n\nexport const resources = {\n  \"zh-CN\": {\n    \"translation\": {\n      \"difficulty.Easy\": \"简单\",\n      \"difficulty.Hard\": \"困难\",\n      \"difficulty.Medium\": \"中等\",\n      \"title.Question\": \"题目\",\n      \"title.Pay\": \"付费\",\n      \"title.Difficulty\": \"难度\",\n      \"title.AcRate\": \"通过率\",\n    },\n  },\n  \"en-US\": {\n    \"translation\": {\n      \"difficulty.Easy\": \"Easy\",\n      \"difficulty.Hard\": \"Hard\",\n      \"difficulty.Medium\": \"Medium\",\n      \"title.Question\": \"Question\",\n      \"title.Pay\": \"Pay\",\n      \"title.Difficulty\": \"Difficulty\",\n      \"title.AcRate\": \"Ac Rate\",\n    },\n  },\n};\n\nexport const languages = [\n  {\n    \"name\": \"zh-CN\",\n    \"text\": \"中文\",\n  },\n  {\n    \"name\": \"en-US\",\n    \"text\": \"English\",\n  },\n];\n\ni18n.use(initReactI18next)\n  .init({\n    resources,\n    lng: Object.keys(resources)[0],\n    keySeparator: false,\n    interpolation: {\n      escapeValue: false,\n    },\n  });\n\nexport default i18n;\n","import { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { DownOutlined } from '@ant-design/icons';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Layout, Menu, Dropdown, Button } from 'antd';\n\nimport { languages } from \"../i18n\";\n\nexport default function Header() {\n  const [language, setLanguage] = useState(\"中文\");\n  const [menuKey, setMenuKey] = useState(\"All\");\n\n  const { i18n } = useTranslation();\n\n  let location = useLocation();\n\n  useEffect(() => {\n    let pathname = location.pathname;\n    if (pathname === \"/\") {\n      setMenuKey(\"All\");\n    } else {\n      let list = pathname.split(\"/\");\n      if (list.length === 3 || list[1] === \"Categories\") {\n        setMenuKey(pathname.split(\"/\")[2]);\n      }\n    }\n  }, [location])\n\n  return (\n    <Layout.Header className=\"header\">\n      <div className=\"layout\">\n        <Link to=\"/\">\n          <div className=\"logo\" />\n        </Link>\n        <div className=\"layoutMenu\">\n          <Menu theme=\"light\" onClick={(info) => {\n            setMenuKey(info.key.toString());\n          }} mode=\"horizontal\" selectedKeys={[menuKey]} defaultSelectedKeys={[menuKey]}>\n            <Menu.Item key=\"All\" className=\"menuItem\"><Link to=\"/categories/All\">All</Link></Menu.Item>\n            <Menu.Item key=\"Algorithms\" className=\"menuItem\"><Link to=\"/categories/Algorithms\">Algorithms</Link></Menu.Item>\n            <Menu.Item key=\"Concurrency\" className=\"menuItem\"><Link to=\"/categories/Concurrency\">Concurrency</Link></Menu.Item>\n            <Menu.Item key=\"Database\" className=\"menuItem\"><Link to=\"/categories/Database\">Database</Link></Menu.Item>\n            <Menu.Item key=\"Shell\" className=\"menuItem\"><Link to=\"/categories/Shell\">Shell</Link></Menu.Item>\n          </Menu>\n          <div className=\"language\">\n            <Dropdown overlay={\n              <Menu onClick={(info) => {\n                let key = info.key.toString();\n                i18n.changeLanguage(key);\n                for (let lang of languages) {\n                  if (lang.name === key) {\n                    setLanguage(lang.text);\n                  }\n                }\n              }}>\n                {\n                  languages.map(lang => {\n                    return (\n                      <Menu.Item key={lang.name}>\n                        {lang.text}\n                      </Menu.Item>\n                    );\n                  })\n                }\n              </Menu>\n            }>\n              <Button>\n                {language} <DownOutlined />\n              </Button>\n            </Dropdown>\n          </div>\n        </div>\n      </div>\n    </Layout.Header>\n  );\n}\n","import axios from \"axios\";\nimport { Empty, Layout, Card } from \"antd\";\nimport Highlight from \"react-highlight\";\nimport { useParams } from \"react-router-dom\";\nimport { CardTabListType } from \"antd/lib/card\";\nimport { useEffect, useState } from \"react\";\n\ninterface ISolution {\n  questionId: number;\n  data: string;\n  language: string;\n  filename: string;\n}\n\nconst LanguagesDefinition = [\n  { \"language\": \"C\", \"suffix\": \".c\" },\n  { \"language\": \"C++\", \"suffix\": \".cc\" },\n  { \"language\": \"Go\", \"suffix\": \".go\" },\n  { \"language\": \"Java\", \"suffix\": \".java\" },\n  { \"language\": \"JavaScript\", \"suffix\": \".js\" },\n  { \"language\": \"PHP\", \"suffix\": \".php\" },\n  { \"language\": \"Python\", \"suffix\": \".py\" },\n  { \"language\": \"Rust\", \"suffix\": \".rs\" },\n  { \"language\": \"SQL\", \"suffix\": \".sql\" },\n  { \"language\": \"Bash\", \"suffix\": \".sh\" },\n];\n\nexport default function Solutions({ localServer }: any) {\n  let { id } = useParams();\n\n  const [solutions, setSolutions] = useState<ISolution[]>([]);\n  const [tabList, setTabList] = useState<CardTabListType[]>([]);\n  const [active, setActive] = useState(\"\");\n\n  useEffect(() => {\n    axios.get(localServer + \"/solutions/\" + id + \".json\")\n      .then(response => {\n        if (response.status !== 200) {\n          console.error(\"request questions list with error:\", response.status);\n        } else {\n          setSolutions(response.data);\n        }\n      });\n  }, [id, localServer]);\n\n  useEffect(() => {\n    let tabList: CardTabListType[] = [];\n    for (let lang of LanguagesDefinition) {\n      for (let solution of solutions) {\n        if (lang.language === solution.language) {\n          tabList.push({\n            key: solution.language,\n            tab: solution.language,\n          });\n        }\n      }\n    }\n    setTabList(tabList);\n  }, [solutions]);\n\n  useEffect(() => {\n    if (tabList.length >= 1) {\n      setActive(tabList[0].key);\n    }\n  }, [tabList]);\n\n  return (\n    <Layout.Content className=\"content\">\n      <Card\n        style={{ width: '100%' }}\n        tabList={tabList}\n        defaultActiveTabKey={active}\n        activeTabKey={active}\n        onTabChange={key => {\n          setActive(key);\n        }}\n      >\n        {\n          solutions.length === 0 ? <Empty /> : solutions.map(solution => {\n            return (\n              solution.language !== active ? \"\" :\n                <Highlight key={solution.filename} className={solution.language.toLowerCase()}>\n                  {atob(solution.data).trim()}\n                </Highlight>\n            );\n          })\n        }\n      </Card>\n    </Layout.Content >\n  );\n}\n","import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link, useParams } from 'react-router-dom';\nimport { Layout, List, Typography, Pagination } from \"antd\";\nimport { LockOutlined, UnlockOutlined } from '@ant-design/icons';\n\nconst pageSize = 50;\n\ninterface IQuestion {\n  title: string;\n  translated_title: string;\n  question_id: number;\n  question_frontend_id: string;\n  difficulty: string;\n  paid_only: boolean;\n  title_slug: string;\n  category_title: string;\n  acRate: string;\n}\n\nexport default function Questions({ localServer }: any) {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalQuestions, setTotalQuestions] = useState(0);\n  const [questions, setQuestions] = useState<IQuestion[]>([]);\n\n  const { t, i18n } = useTranslation();\n\n  let { category } = useParams();\n\n  useEffect(() => {\n    axios.get(localServer + \"/index.json\")\n      .then(response => {\n        let findNum = function (str: String): number {\n          for (let item of response.data) {\n            if (item[\"category_title\"] === str) {\n              return item[\"num\"];\n            }\n          }\n          return 0;\n        }\n        let allNum = function (): number {\n          let res: number = 0;\n          for (let item of response.data) {\n            res += item[\"num\"];\n          }\n          return res;\n        }\n        if (response.status !== 200) {\n          console.error(\"request questions list with error:\", response.status);\n        } else {\n          if (category === \"All\" || category === \"\" || category === undefined) {\n            setTotalQuestions(allNum());\n          } else {\n            setTotalQuestions(findNum(category));\n          }\n        }\n      });\n  }, [localServer, category]);\n\n  useEffect(() => {\n    let param = category;\n    if (param === \"\" || param === undefined) {\n      param = \"All\";\n    }\n    axios.get(localServer + \"/questions/\" + param + \"/\" + currentPage + \".json\")\n      .then(response => {\n        if (response.status !== 200) {\n          console.error(\"request questions list with error:\", response.status);\n        } else {\n          setQuestions(response.data);\n        }\n      });\n  }, [category, currentPage, localServer]);\n\n  return (\n    <Layout.Content className=\"content\">\n      <div className=\"site-layout-content\">\n        <List\n          header={\n            <div className=\"questionHeader\">\n              <div><Typography.Text strong>{t(\"title.Question\")}</Typography.Text></div>\n              <div className=\"description\">\n                <div className=\"paid_only\"><Typography.Text strong>{t(\"title.Pay\")}</Typography.Text></div>\n                <div className=\"difficult\"><Typography.Text strong>{t(\"title.Difficulty\")}</Typography.Text></div>\n                <div className=\"ace\"><Typography.Text strong>{t(\"title.AcRate\")}</Typography.Text></div>\n              </div>\n            </div>\n          }\n          dataSource={questions}\n          renderItem={(item) => (\n            <Link to={`/solutions/${item.question_frontend_id}`}>\n              <List.Item>\n                <div className=\"questionItem\">\n                  <div>\n                    <span>\n                      {item.question_frontend_id}.&nbsp;\n                    </span>\n                    {i18n.language === \"en-US\" ? item.title : item.translated_title === \"\" ? item.title : item.translated_title}\n                  </div>\n                  <div className=\"description\">\n                    <div className=\"paid_only\">{item.paid_only ? <LockOutlined style={{ color: \"#cca766\" }} /> : <UnlockOutlined style={{ color: \"#009975\" }} />}</div>\n                    <div className=\"difficult\">\n                      <span className={item.difficulty.toLowerCase()}>\n                        {t(`difficulty.${item.difficulty}`)}\n                      </span>\n                    </div>\n                    <div className=\"ace\">{item.acRate}</div>\n                  </div>\n                </div>\n              </List.Item>\n            </Link>\n          )}\n        />\n        <div className=\"pagination\">\n          <Pagination\n            current={currentPage}\n            total={totalQuestions}\n            showSizeChanger={false}\n            pageSize={pageSize}\n            onChange={(page) => {\n              setCurrentPage(page);\n            }}\n          />\n        </div>\n      </div>\n    </Layout.Content>\n  );\n}\n","import { Layout } from 'antd';\nimport { Routes, Route, BrowserRouter as Router } from 'react-router-dom';\n\nimport './App.scss';\n\nimport Header from \"./Header\";\nimport Solutions from \"./Solutions\";\nimport Questions from \"./Questions\";\n\nconst localServer = process.env.NODE_ENV === \"development\" ? \"http://127.0.0.1:59614/db\" : \"/db\";\n\nexport default function App() {\n  return (\n    <Layout>\n      <Router>\n        <Header />\n        <Routes>\n          <Route path=\"/\" element={<Questions localServer={localServer} />} />\n          <Route path=\"/categories/:category\" element={<Questions localServer={localServer} />} />\n          <Route path=\"/solutions/:id\" element={<Solutions localServer={localServer} />} />\n        </Routes>\n        <Layout.Footer style={{ textAlign: 'center' }}>\n          6leetcode ©2020 Created by <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://github.com/tosone\">Tosone</a>\n        </Layout.Footer>\n      </Router>\n    </Layout >\n  );\n}\n","import ReactDOM from 'react-dom';\n\nimport './index.scss';\nimport './i18n';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}