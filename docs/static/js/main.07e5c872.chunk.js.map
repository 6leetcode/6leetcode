{"version":3,"sources":["Solutions/index.tsx","CodeBox/index.tsx","i18n.ts","Header/index.tsx","Questions/index.tsx","App.tsx","index.tsx"],"names":["LanguagesDefinition","Solutions","localServer","id","useParams","useState","solutions","setSolutions","tabList","setTabList","active","setActive","i18n","useTranslation","content","translated_content","question","setQuestion","useEffect","item","window","localStorage","getItem","JSON","parse","axios","get","then","response","status","console","error","data","lang","solution","language","push","key","tab","_","uniqBy","length","Content","className","span","title","question_frontend_id","translated_title","style","marginRight","dangerouslySetInnerHTML","__html","Buffer","from","toString","defaultActiveTabKey","activeTabKey","onTabChange","map","filename","CodeBox","copied","setCopied","text","atob","trim","onCopy","setTimeout","toLowerCase","a11yDark","showLineNumbers","resources","languages","use","initReactI18next","init","lng","Object","keys","keySeparator","interpolation","escapeValue","Header","setLanguage","menuKey","setMenuKey","location","useLocation","langText","i","name","pathname","list","split","to","theme","onClick","info","mode","selectedKeys","defaultSelectedKeys","Item","overlay","changeLanguage","setItem","DownOutlined","Questions","currentPage","setCurrentPage","totalQuestions","setTotalQuestions","questions","setQuestions","t","category","undefined","res","allNum","str","findNum","param","question_id","stringify","header","Text","strong","dataSource","renderItem","paid_only","LockOutlined","color","UnlockOutlined","difficulty","acRate","current","total","showSizeChanger","pageSize","onChange","page","App","path","element","Footer","textAlign","rel","target","href","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.07e5c872.chunk.js","sourcesContent":["import _ from 'lodash';\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport { CardTabListType } from \"antd/lib/card\";\nimport { Empty, Layout, Card, Col, Row } from \"antd\";\n\nimport CodeBox from '../CodeBox';\nimport { IQuestion, ISolution } from '../types';\n\nconst LanguagesDefinition = [\n  { \"language\": \"C\", \"suffix\": \".c\" },\n  { \"language\": \"C++\", \"suffix\": \".cc\" },\n  { \"language\": \"Go\", \"suffix\": \".go\" },\n  { \"language\": \"Java\", \"suffix\": \".java\" },\n  { \"language\": \"JavaScript\", \"suffix\": \".js\" },\n  { \"language\": \"PHP\", \"suffix\": \".php\" },\n  { \"language\": \"Python\", \"suffix\": \".py\" },\n  { \"language\": \"Rust\", \"suffix\": \".rs\" },\n  { \"language\": \"SQL\", \"suffix\": \".sql\" },\n  { \"language\": \"Bash\", \"suffix\": \".sh\" },\n];\n\nexport default function Solutions({ localServer }: any) {\n  let { id } = useParams();\n\n  const [solutions, setSolutions] = useState<ISolution[]>([]);\n  const [tabList, setTabList] = useState<CardTabListType[]>([]);\n  const [active, setActive] = useState(\"\");\n  const { i18n } = useTranslation();\n\n  const [question, setQuestion] = useState<IQuestion>({ content: \"\", translated_content: \"\" } as IQuestion);\n\n  useEffect(() => {\n    let item = window.localStorage.getItem(id);\n    if (item !== null) {\n      setQuestion(JSON.parse(item) as IQuestion);\n    }\n  }, [id])\n\n  useEffect(() => {\n    axios.get(localServer + \"/solutions/\" + id + \".json\")\n      .then(response => {\n        if (response.status !== 200) {\n          console.error(\"request questions list with error:\", response.status);\n        } else {\n          setSolutions(response.data);\n        }\n      });\n  }, [id, localServer]);\n\n  useEffect(() => {\n    let tabList: CardTabListType[] = [];\n    for (let lang of LanguagesDefinition) {\n      for (let solution of solutions) {\n        if (lang.language === solution.language) {\n          tabList.push({\n            key: solution.language,\n            tab: solution.language,\n          });\n        }\n      }\n    }\n    setTabList(_.uniqBy(tabList, 'key'));\n  }, [solutions]);\n\n  useEffect(() => {\n    if (tabList.length >= 1) {\n      setActive(tabList[0].key);\n    }\n  }, [tabList]);\n\n  return (\n    <Layout.Content className=\"content\">\n      <Row>\n        <Col span={9}>\n          <Card title={\n            i18n.language === \"en-US\" ?\n              (question.question_frontend_id + \". \" + question.title) :\n              (question.question_frontend_id + \". \" + question.translated_title)\n          } style={{ marginRight: '10px' }}>\n            {\n              i18n.language === \"en-US\" ?\n                <div dangerouslySetInnerHTML={{ __html: Buffer.from(question.content, \"base64\").toString(\"utf-8\") }} /> :\n                <div dangerouslySetInnerHTML={{ __html: Buffer.from(question.translated_content, \"base64\").toString(\"utf-8\") }} />\n            }\n          </Card>\n        </Col>\n        <Col span={15}>\n          <Card\n            tabList={tabList}\n            defaultActiveTabKey={active}\n            activeTabKey={active}\n            onTabChange={key => {\n              setActive(key);\n            }}\n          >\n            {\n              solutions.length === 0 ? <Empty /> : solutions.map(solution => {\n                return (\n                  solution.language !== active ? \"\" : <CodeBox solution={solution} key={solution.filename} />\n                );\n              })\n            }\n          </Card>\n        </Col>\n      </Row>\n    </Layout.Content >\n  );\n}\n","import { useState } from \"react\";\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { CopyOutlined, CheckOutlined } from '@ant-design/icons';\nimport { a11yDark } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nimport './index.scss';\n\nexport default function CodeBox({ solution }: any) {\n  let [copied, setCopied] = useState(false);\n\n  return (\n    <div className=\"codebox\">\n      <CopyToClipboard text={atob(solution.data).trim()} onCopy={() => {\n        setCopied(true);\n        setTimeout(() => {\n          setCopied(false);\n        }, 500);\n      }}>\n        {copied ? <CheckOutlined className=\"copyButton\" /> : <CopyOutlined className=\"copyButton\" />}\n      </CopyToClipboard>\n      <SyntaxHighlighter language={solution.language.toLowerCase()}\n        style={a11yDark} showLineNumbers>\n        {atob(solution.data).trim()}\n      </SyntaxHighlighter>\n    </div>\n  );\n\n};\n","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\n\nexport const resources = {\n  \"zh-CN\": {\n    \"translation\": {\n      \"difficulty.Easy\": \"简单\",\n      \"difficulty.Hard\": \"困难\",\n      \"difficulty.Medium\": \"中等\",\n      \"title.Question\": \"题目\",\n      \"title.Pay\": \"付费\",\n      \"title.Difficulty\": \"难度\",\n      \"title.AcRate\": \"通过率\",\n    },\n  },\n  \"en-US\": {\n    \"translation\": {\n      \"difficulty.Easy\": \"Easy\",\n      \"difficulty.Hard\": \"Hard\",\n      \"difficulty.Medium\": \"Medium\",\n      \"title.Question\": \"Question\",\n      \"title.Pay\": \"Pay\",\n      \"title.Difficulty\": \"Difficulty\",\n      \"title.AcRate\": \"Ac Rate\",\n    },\n  },\n};\n\nexport const languages = [\n  {\n    \"name\": \"zh-CN\",\n    \"text\": \"中文\",\n  },\n  {\n    \"name\": \"en-US\",\n    \"text\": \"English\",\n  },\n];\n\ni18n.use(initReactI18next)\n  .init({\n    resources,\n    lng: localStorage.getItem(\"i18n__language\") || Object.keys(resources)[0],\n    keySeparator: false,\n    interpolation: {\n      escapeValue: false,\n    },\n  });\n\nexport default i18n;\n","import { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { DownOutlined } from '@ant-design/icons';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Layout, Menu, Dropdown, Button } from 'antd';\n\nimport { languages } from \"../i18n\";\n\nexport default function Header() {\n  const [language, setLanguage] = useState(\"中文\");\n  const [menuKey, setMenuKey] = useState(\"All\");\n\n  const { i18n } = useTranslation();\n\n  let location = useLocation();\n\n  useEffect(() => {\n    let langText = \"\";\n    for (let i in languages) {\n      if (languages[i].name === i18n.language) {\n        langText = languages[i].text;\n      }\n    }\n    setLanguage(langText);\n  }, [i18n.language])\n\n  useEffect(() => {\n    let pathname = location.pathname;\n    if (pathname === \"/\") {\n      setMenuKey(\"All\");\n    } else {\n      let list = pathname.split(\"/\");\n      if (list.length === 3 || list[1] === \"Categories\") {\n        setMenuKey(pathname.split(\"/\")[2]);\n      }\n    }\n  }, [location])\n\n  return (\n    <Layout.Header className=\"header\">\n      <div className=\"layout\">\n        <Link to=\"/\">\n          <div className=\"logo\" />\n        </Link>\n        <div className=\"layoutMenu\">\n          <Menu theme=\"light\" onClick={(info) => {\n            setMenuKey(info.key.toString());\n          }} mode=\"horizontal\" selectedKeys={[menuKey]} defaultSelectedKeys={[menuKey]}>\n            <Menu.Item key=\"All\" className=\"menuItem\"><Link to=\"/categories/All\">All</Link></Menu.Item>\n            <Menu.Item key=\"Algorithms\" className=\"menuItem\"><Link to=\"/categories/Algorithms\">Algorithms</Link></Menu.Item>\n            <Menu.Item key=\"Concurrency\" className=\"menuItem\"><Link to=\"/categories/Concurrency\">Concurrency</Link></Menu.Item>\n            <Menu.Item key=\"Database\" className=\"menuItem\"><Link to=\"/categories/Database\">Database</Link></Menu.Item>\n            <Menu.Item key=\"Shell\" className=\"menuItem\"><Link to=\"/categories/Shell\">Shell</Link></Menu.Item>\n          </Menu>\n          <div className=\"language\">\n            <Dropdown overlay={\n              <Menu onClick={(info) => {\n                let key = info.key.toString();\n                i18n.changeLanguage(key);\n                localStorage.setItem(\"i18n__language\", key);\n              }}>\n                {\n                  languages.map(lang => {\n                    return (\n                      <Menu.Item key={lang.name}>\n                        {lang.text}\n                      </Menu.Item>\n                    );\n                  })\n                }\n              </Menu>\n            }>\n              <Button>\n                {language} <DownOutlined />\n              </Button>\n            </Dropdown>\n          </div>\n        </div>\n      </div>\n    </Layout.Header>\n  );\n}\n","import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link, useParams } from 'react-router-dom';\nimport { Layout, List, Typography, Pagination } from \"antd\";\nimport { LockOutlined, UnlockOutlined } from '@ant-design/icons';\n\nimport { IQuestion } from '../types';\n\nconst pageSize = 50;\n\nexport default function Questions({ localServer }: any) {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalQuestions, setTotalQuestions] = useState(0);\n  const [questions, setQuestions] = useState<IQuestion[]>([]);\n\n  const { t, i18n } = useTranslation();\n\n  let { category } = useParams();\n\n  useEffect(() => {\n    axios.get(localServer + \"/index.json\")\n      .then(response => {\n        let findNum = function (str: String): number {\n          for (let item of response.data) {\n            if (item[\"category_title\"] === str) {\n              return item[\"num\"];\n            }\n          }\n          return 0;\n        }\n        let allNum = function (): number {\n          let res: number = 0;\n          for (let item of response.data) {\n            res += item[\"num\"];\n          }\n          return res;\n        }\n        if (response.status !== 200) {\n          console.error(\"request questions list with error:\", response.status);\n        } else {\n          if (category === \"All\" || category === \"\" || category === undefined) {\n            setTotalQuestions(allNum());\n          } else {\n            setTotalQuestions(findNum(category));\n          }\n        }\n      });\n  }, [localServer, category]);\n\n  useEffect(() => {\n    let param = category;\n    if (param === \"\" || param === undefined) {\n      param = \"All\";\n    }\n    axios.get(localServer + \"/questions/\" + param + \"/\" + currentPage + \".json\")\n      .then(response => {\n        if (response.status !== 200) {\n          console.error(\"request questions list with error:\", response.status);\n        } else {\n          setQuestions(response.data);\n          for (let question of response.data) {\n            window.localStorage.setItem(question.question_id, JSON.stringify(question));\n          }\n        }\n      });\n  }, [category, currentPage, localServer]);\n\n  return (\n    <Layout.Content className=\"content\">\n      <div className=\"site-layout-content\">\n        <List\n          header={\n            <div className=\"questionHeader\">\n              <div><Typography.Text strong>{t(\"title.Question\")}</Typography.Text></div>\n              <div className=\"description\">\n                <div className=\"paid_only\"><Typography.Text strong>{t(\"title.Pay\")}</Typography.Text></div>\n                <div className=\"difficult\"><Typography.Text strong>{t(\"title.Difficulty\")}</Typography.Text></div>\n                <div className=\"ace\"><Typography.Text strong>{t(\"title.AcRate\")}</Typography.Text></div>\n              </div>\n            </div>\n          }\n          dataSource={questions}\n          renderItem={(item) => (\n            <Link to={`/solutions/${item.question_frontend_id}`}>\n              <List.Item>\n                <div className=\"questionItem\">\n                  <div>\n                    <span>\n                      {item.question_frontend_id}.&nbsp;\n                    </span>\n                    {i18n.language === \"en-US\" ? item.title : item.translated_title === \"\" ? item.title : item.translated_title}\n                  </div>\n                  <div className=\"description\">\n                    <div className=\"paid_only\">{item.paid_only ? <LockOutlined style={{ color: \"#cca766\" }} /> : <UnlockOutlined style={{ color: \"#009975\" }} />}</div>\n                    <div className=\"difficult\">\n                      <span className={item.difficulty.toLowerCase()}>\n                        {t(`difficulty.${item.difficulty}`)}\n                      </span>\n                    </div>\n                    <div className=\"ace\">{item.acRate}</div>\n                  </div>\n                </div>\n              </List.Item>\n            </Link>\n          )}\n        />\n        <div className=\"pagination\">\n          <Pagination\n            current={currentPage}\n            total={totalQuestions}\n            showSizeChanger={false}\n            pageSize={pageSize}\n            onChange={(page) => {\n              setCurrentPage(page);\n            }}\n          />\n        </div>\n      </div>\n    </Layout.Content>\n  );\n}\n","import { Layout } from 'antd';\nimport { Routes, Route, HashRouter } from 'react-router-dom';\n\nimport './App.scss';\n\nimport Header from \"./Header\";\nimport Solutions from \"./Solutions\";\nimport Questions from \"./Questions\";\n\nconst localServer = process.env.NODE_ENV === \"development\" ? \"/db\" : \"/db\";\n\nexport default function App() {\n  return (\n    <Layout>\n      <HashRouter>\n        <Header />\n        <Routes>\n          <Route path=\"/\" element={<Questions localServer={localServer} />} />\n          <Route path=\"/categories/:category\" element={<Questions localServer={localServer} />} />\n          <Route path=\"/solutions/:id\" element={<Solutions localServer={localServer} />} />\n        </Routes>\n        <Layout.Footer style={{ textAlign: 'center' }}>\n          6leetcode ©2020 Created by <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://github.com/tosone\">Tosone</a>\n        </Layout.Footer>\n      </HashRouter>\n    </Layout >\n  );\n}\n","import ReactDOM from 'react-dom';\n\nimport './index.scss';\nimport './i18n';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}